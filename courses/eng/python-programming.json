{
    "course_format": [
        "Duration of the course is 24-32 academic hours. (Usually 3-4 days).",
        "The course includes approximately 40% hands on lab work.",
        "In the 4 day long version we allocate more time for exercises and have more time for individual help.",
        "The course can be given in either using Python 2 or Python 3"
    ],
    "language": [
        "The course is given in Hebrew with slides and materials in English."
    ],
    "objectives": [
        "To be able to write programs in Python.",
        "To master the rich set of Python libraries and modules.",
        "Understand procedural control flow in Python",
        "Use Object Oriented programming techniques"
    ],
    "prerequisites": [
        "Basic programming background in a programming language such as C, Java, Javascript, Perl, PHP or Ruby, just to name a few.",
        "Experience with a text editor like emacs, vi, pico or notepad.",
        "Understanding of files and directories."
    ],
    "syllabus": [
        {
            "entries": [
                "Installing Python",
                "Where and why to use Python",
                "Using the Python interactive interpreter",
                "Documentation and how to get help?",
                "Indentation"
            ],
            "title": "Introduction to Python"
        },
        {
            "entries": [
                "Strings",
                "Numbers",
                "Split",
                "String slices",
                "Immputable strings"
            ],
            "title": "Scalar types and operators"
        },
        {
            "entries": [
                "Lists",
                "List slices",
                "Tuples",
                "Dictionaries (hashes)",
                "Sets",
                "Sorting",
                "Queues",
                "Stack",
                "Collections",
                "Iterables",
                "Mutable and immutable"
            ],
            "title": "Collection types and operators"
        },
        {
            "entries": [
                "Function parameters",
                "Positional parameters",
                "Named parameters",
                "Default values",
                "Optional parameters",
                "Return values",
                "Function documentation",
                "Lambda functions"
            ],
            "title": "Functions subroutines"
        },
        {
            "entries": [
                "For loops",
                "While loops",
                "Loop controls",
                "Conditionals",
                "Chained comparison",
                "Enumerate",
                "Boolean and logical operators"
            ],
            "title": "Control flow"
        },
        {
            "entries": [
                "print",
                "print formatting",
                "read/write files"
            ],
            "title": "IO"
        },
        {
            "entries": [
                "Matching all",
                "Searching for a single match",
                "Meta characters",
                "Character classes",
                "Special character classes",
                "Quantifiers",
                "Alternatives",
                "Modifier flags",
                "Anchors",
                "Back-references",
                "Substitution",
                "Split"
            ],
            "title": "Regular expression (pattern matching)"
        },
        {
            "entries": [
                "Filesystem related functions",
                "Running external processes"
            ],
            "title": "The Python standard library"
        },
        {
            "entries": [
                "Loading a module",
                "Finding a module in a private directory",
                "Changing the search path to a relative directory",
                "Importing selected functions",
                "Namespaces",
                "Creating executable module"
            ],
            "title": "Creating modules"
        },
        {
            "entries": [
                "Creating non-fatal warnings",
                "Catching exceptions",
                "Handling exceptions",
                "Throwing a new exception",
                "The final block",
                "Creating your own exception"
            ],
            "title": "Exception handling"
        },
        {
            "entries": [
                "Defining classes",
                "Initializing objects",
                "Methods",
                "Attributes or members",
                "The self",
                "Inheritance"
            ],
            "title": "Object Oriented Programming"
        },
        {
            "entries": [
                "Installing and using 3rd party modules",
                "Writing simple web scraping program",
                "Writing simple Web application",
                "Accessing SQL databases",
                "Reading and writing Excel files"
            ],
            "title": "Additional uses"
        }
    ],
    "target_audience": [
        "This is a beginner course suitable for anyone wanting to use Python for developing applications, writing test for QA or using it for system administration."
    ],
    "title": "Python Programming"
}
