{
    "course_format": [
        "Duration of the course is 24 academic hours. (3 full days).",
        "The course includes approximately 40% hands on lab work."
    ],
    "objectives": [
        "To be able to write programs in Rust.",
        "To master the rich set of Rust libraries (crates)."
    ],
    "prerequisites": [
        "Basic programming background in either a high-level language such as C, Java or a scripting language such as Shell, VBSscript, Javascript, Perl, PHP or Ruby"
    ],
    "syllabus": [
        {
            "entries": [
                "Installing Rust",
                "Why use Rust?",
                "Configuring IDE or editor",
                "Cargo - the package and dependency manager of Rust",
                "Hello World",
                "Primitives - basic (scalar) types in Rust",
                "Inferred types",
                "Numbers, characters, strings",
                "String slices",
                "Variables, mutability",
                "Scope of variables",
                "Control flow (if, for, loop)",
                "Understanding memory safety, ownership and borrowing",
                "They type system of Rust",
                "Error handling",
                "Special types: Option, Result",
                "Pattern matching (match, Ok, Err, Some, None)",
                "Compound types (Vectors, Hashes, Structs, Tuples, etc.)",
                "Vectors",
                "Structs",
                "Enums",
                "Functions",
                "Creating libraries in Rust",
                "Generics and Traits",
                "Collections",
                "Variable lifetime",
                "Smart pointers",
                "Dependency management",
                "Backword compability",
                "Testing your code",
                "Distributing executables for multiple platforms (CI/CD, cross compilation)"
            ],
            "title": "Rust"
        },
        {
            "entries": [
                "The regex flavor of Rust",
                "Matching strings",
                "Capturing the match",
                "Matching repetitions",
                "Replacing strings",
                "Compiling regular expressions only once"
            ],
            "title": "Regular Expressions in Rust"
        },
        {
            "entries": [
                "Use a Rust crate from Python",
                "Use a Rust crate from C"
            ],
            "title": "Reusable Rust library"
        },
        {
            "entries": [
                "Data embedded in the source code",
                "What is the Stack, Heap",
                "Pointers",
                "Memory management, memory safety",
                "Manual memory managemen with allocation and freeing",
                "Reference counting",
                "Garbage collection",
                "Compiled vs. Interpreted languages",
                "Statically type vs. dynamically typed languages",
                "Loosly typed vs strongly typed"
            ],
            "title": "Relevant Computer Science topics"
        },
        {
            "entries": [
                "Iterators",
                "Closures",
                "Function pointers"
            ],
            "title": "Functional programming in Rust"
        },
        {
            "entries": [
                "Module system",
                "Creating an executable (binary) crate",
                "Creating a library crate",
                "Packaging crates",
                "Distributing crates",
                "One crate per repo",
                "Multiple crates per repo (monorepo)"
            ],
            "title": "Crates"
        },
        {
            "entries": [
                  "Run code simultaniously",
                  "Passing data back-and-force between threads",
                  "Sharing data between threads",
                  "Avoiding dead-locks and other nastyness"
            ],
            "title": "Fearless Concurrency with threadding"
        },
        {
            "entries": [
            ],
            "title": "Concurrency with async programming"
        },
        {
            "entries": [
            ],
            "title": "The liquid Templating system"
        },
        {
            "entries": [
            ],
            "title": "CLI - Command line applications in Rust"
        },
        {
            "entries": [
            ],
            "title": "Building API in Rust"
        },
        {
            "entries": [
                "JSON",
                "YAML",
                "CSV"
            ],
            "title": "Handling well-knonw file formats"
        },
        {
            "entries": [
            ],
            "title": "Macros"
        },
        {
            "entries": [
            ],
            "title": "Unsafe Rust and FFI - Foreign Function Interface"
        }
     ],
    "target_audience": [
        "This is a beginner course suitable for anyone wanting to use Rust for developing libraries or applications."
    ],
    "title": "Rust Programming"
}
